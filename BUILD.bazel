load("@npm//@bazel/typescript:index.bzl", "ts_library")
load("@npm//webpack-cli:index.bzl", "webpack_cli")
load("@npm//http-server:index.bzl", "http_server")

ts_library(
    name = "moduleB_ts",
    srcs = [
        "moduleB.ts",
    ],
)

ts_library(
    name = "moduleA_ts",
    srcs = [
        "moduleA.ts",
    ],
    deps = [
        ":moduleB_ts",
    ],
)

filegroup(
    name = "moduleA.js",
    srcs = [
        "moduleA_ts",
        # "moduleB_ts",
    ],
    output_group = "es6_sources",
)

webpack_cli(
    name = "bundle",
    outs = [
        "app.bundle.js",
    ],
    args = [
        "$(locations :moduleA.js)",  # Entry point
        "--config",
        "$(execpath :webpack.config.js)",
        "-o",
        "$@",
        "--mode",
        "development",
        # "--verbose",
    ],
    data = [
        ":moduleA.js",
        ":webpack.config.js",
        "@npm//:node_modules",
    ],
    visibility = ["//visibility:public"],
)

# Note, on Windows you need `--enable_runfiles`
http_server(
    name = "server",
    data = [
        "app.bundle.js",
        "index.html",
    ],
    templated_args = [
        "-p",
        "8888",
        ".",
    ],
)
